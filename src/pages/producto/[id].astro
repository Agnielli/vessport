---
import Layout from '../../layouts/Layout.astro';
import { products } from '../../lib/supabase';

const { id } = Astro.params;

// Obtener el producto por ID
const { data: product } = await products.getById(id);

if (!product) {
  return Astro.redirect('/404');
}

// Obtener productos relacionados
const { data: relatedProducts } = await products.getAll({ 
  category: product.category_id, 
  active: true 
});

const related = relatedProducts?.filter(p => p.id !== product.id).slice(0, 4) || [];
---

<Layout title={`${product.name} - VES Sport`}>
  <div class="min-h-screen bg-gray-50 py-8">
    <div class="container mx-auto px-4">
      <!-- Breadcrumb -->
      <nav class="flex items-center space-x-2 text-sm text-gray-600 mb-8">
        <a href="/" class="hover:text-primary">Inicio</a>
        <span>/</span>
        <a href="/#productos" class="hover:text-primary">Productos</a>
        <span>/</span>
        <span class="text-gray-900">{product.name}</span>
      </nav>

      <div class="grid lg:grid-cols-2 gap-12 mb-16">
        <!-- Imagen del Producto -->
        <div class="space-y-4">
          <div class="aspect-square bg-gradient-to-br from-gray-100 to-gray-200 rounded-xl overflow-hidden">
            {product.images && product.images[0] ? (
              <img 
                src={product.images[0]} 
                alt={product.name}
                class="w-full h-full object-cover"
              />
            ) : (
              <div class="w-full h-full flex items-center justify-center">
                <div class="w-48 h-48 bg-gradient-to-br from-primary to-primary-dark rounded-lg flex items-center justify-center">
                  <svg class="w-24 h-24 text-white" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                  </svg>
                </div>
              </div>
            )}
          </div>
          
          <!-- Thumbnails -->
          {product.images && product.images.length > 1 && (
            <div class="grid grid-cols-4 gap-2">
              {product.images.slice(1, 5).map((image, index) => (
                <div class="aspect-square bg-gray-200 rounded-lg overflow-hidden cursor-pointer hover:opacity-75 transition-opacity">
                  <img src={image} alt={`${product.name} ${index + 2}`} class="w-full h-full object-cover" />
                </div>
              ))}
            </div>
          )}
        </div>

        <!-- Información del Producto -->
        <div class="space-y-6">
          <div>
            <h1 class="text-3xl font-display font-bold text-gray-900 mb-2">
              {product.name}
            </h1>
            <p class="text-xl text-primary font-bold">
              €{product.base_price.toFixed(2)}
            </p>
          </div>

          <div class="prose prose-gray max-w-none">
            <p>{product.description}</p>
          </div>

          <!-- Selector de Talla -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-3">
              Talla:
            </label>
            <div class="grid grid-cols-6 gap-2">
              {product.sizes?.map((size) => (
                <button 
                  class="size-option border-2 border-gray-300 hover:border-primary py-2 px-3 rounded-lg text-center font-medium transition-colors"
                  data-size={size}
                >
                  {size}
                </button>
              ))}
            </div>
          </div>

          <!-- Selector de Color -->
          {product.colors && (
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-3">
                Color:
              </label>
              <div class="flex space-x-2">
                {product.colors.map((color) => (
                  <button 
                    class="color-option w-10 h-10 rounded-full border-2 border-gray-300 hover:border-primary transition-colors"
                    data-color={color}
                    style={`background-color: ${getColorValue(color)}`}
                    title={color}
                  ></button>
                ))}
              </div>
            </div>
          )}

          <!-- Selector de Cantidad -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-3">
              Cantidad:
            </label>
            <div class="flex items-center space-x-3">
              <button id="decrease-qty" class="w-10 h-10 border border-gray-300 rounded-lg flex items-center justify-center hover:bg-gray-50">
                -
              </button>
              <input 
                type="number" 
                id="quantity" 
                value="1" 
                min="1" 
                max={product.stock_quantity}
                class="w-20 text-center border border-gray-300 rounded-lg py-2"
              />
              <button id="increase-qty" class="w-10 h-10 border border-gray-300 rounded-lg flex items-center justify-center hover:bg-gray-50">
                +
              </button>
              <span class="text-sm text-gray-600">
                ({product.stock_quantity} disponibles)
              </span>
            </div>
          </div>

          <!-- Botones de Acción -->
          <div class="space-y-3">
            <button 
              id="add-to-cart"
              class="w-full bg-primary hover:bg-primary-dark text-white py-3 px-6 rounded-lg font-semibold transition-colors"
            >
              Agregar al Carrito - €{product.base_price.toFixed(2)}
            </button>
            
            <button 
              id="create-design"
              class="w-full border-2 border-primary text-primary hover:bg-primary hover:text-white py-3 px-6 rounded-lg font-semibold transition-colors"
            >
              Crear Diseño Personalizado
            </button>
          </div>

          <!-- Información Adicional -->
          <div class="border-t border-gray-200 pt-6 space-y-4">
            <div class="flex items-center space-x-3">
              <svg class="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
              </svg>
              <span class="text-sm text-gray-700">Envío gratuito en pedidos superiores a €50</span>
            </div>
            
            <div class="flex items-center space-x-3">
              <svg class="w-5 h-5 text-blue-500" fill="currentColor" viewBox="0 0 20 20">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <span class="text-sm text-gray-700">Garantía de calidad premium</span>
            </div>
            
            <div class="flex items-center space-x-3">
              <svg class="w-5 h-5 text-purple-500" fill="currentColor" viewBox="0 0 20 20">
                <path d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"></path>
              </svg>
              <span class="text-sm text-gray-700">Tecnología full-print de alta calidad</span>
            </div>
          </div>
        </div>
      </div>

      <!-- Productos Relacionados -->
      {related.length > 0 && (
        <div>
          <h2 class="text-2xl font-display font-bold text-gray-900 mb-8">
            Productos Relacionados
          </h2>
          <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {related.map((relatedProduct) => (
              <div class="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow">
                <div class="aspect-square bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                  {relatedProduct.images && relatedProduct.images[0] ? (
                    <img 
                      src={relatedProduct.images[0]} 
                      alt={relatedProduct.name}
                      class="w-full h-full object-cover"
                    />
                  ) : (
                    <div class="w-24 h-24 bg-gradient-to-br from-primary to-primary-dark rounded-lg flex items-center justify-center">
                      <svg class="w-12 h-12 text-white" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                      </svg>
                    </div>
                  )}
                </div>
                
                <div class="p-4">
                  <h3 class="font-semibold text-gray-900 mb-2">{relatedProduct.name}</h3>
                  <p class="text-primary font-bold">€{relatedProduct.base_price.toFixed(2)}</p>
                  <a 
                    href={`/producto/${relatedProduct.id}`}
                    class="mt-3 block w-full text-center bg-gray-100 hover:bg-gray-200 text-gray-800 py-2 px-4 rounded-lg font-medium transition-colors"
                  >
                    Ver Producto
                  </a>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  </div>
</Layout>

<script define:vars={{ product }}>
  document.addEventListener('DOMContentLoaded', function() {
    let selectedSize = 'M';
    let selectedColor = product.colors?.[0] || 'white';
    let quantity = 1;

    // Selección de talla
    document.querySelectorAll('.size-option').forEach(button => {
      button.addEventListener('click', function() {
        document.querySelectorAll('.size-option').forEach(b => {
          b.classList.remove('border-primary', 'bg-primary', 'text-white');
          b.classList.add('border-gray-300');
        });
        
        this.classList.remove('border-gray-300');
        this.classList.add('border-primary', 'bg-primary', 'text-white');
        selectedSize = this.dataset.size;
      });
    });

    // Selección de color
    document.querySelectorAll('.color-option').forEach(button => {
      button.addEventListener('click', function() {
        document.querySelectorAll('.color-option').forEach(b => {
          b.classList.remove('border-primary');
          b.classList.add('border-gray-300');
        });
        
        this.classList.remove('border-gray-300');
        this.classList.add('border-primary');
        selectedColor = this.dataset.color;
      });
    });

    // Control de cantidad
    const quantityInput = document.getElementById('quantity');
    const decreaseBtn = document.getElementById('decrease-qty');
    const increaseBtn = document.getElementById('increase-qty');

    decreaseBtn.addEventListener('click', () => {
      if (quantity > 1) {
        quantity--;
        quantityInput.value = quantity;
      }
    });

    increaseBtn.addEventListener('click', () => {
      if (quantity < product.stock_quantity) {
        quantity++;
        quantityInput.value = quantity;
      }
    });

    quantityInput.addEventListener('change', (e) => {
      const value = parseInt(e.target.value);
      if (value >= 1 && value <= product.stock_quantity) {
        quantity = value;
      } else {
        quantityInput.value = quantity;
      }
    });

    // Agregar al carrito
    document.getElementById('add-to-cart').addEventListener('click', function() {
      const cartItem = {
        productId: product.id,
        name: product.name,
        price: product.base_price,
        size: selectedSize,
        color: selectedColor,
        quantity: quantity,
        designSalesCount: 0
      };

      window.dispatchEvent(new CustomEvent('addToCart', {
        detail: cartItem
      }));
    });

    // Crear diseño
    document.getElementById('create-design').addEventListener('click', function() {
      window.location.href = `/design/editor?product=${product.id}`;
    });

    // Seleccionar primera talla por defecto
    const firstSizeButton = document.querySelector('.size-option');
    if (firstSizeButton) {
      firstSizeButton.click();
    }

    // Seleccionar primer color por defecto
    const firstColorButton = document.querySelector('.color-option');
    if (firstColorButton) {
      firstColorButton.click();
    }
  });

  function getColorValue(color) {
    const colorMap = {
      'white': '#ffffff',
      'black': '#000000',
      'red': '#ef4444',
      'blue': '#3b82f6',
      'green': '#10b981',
      'yellow': '#f59e0b',
      'purple': '#8b5cf6',
      'pink': '#ec4899',
      'gray': '#6b7280',
      'navy': '#1e3a8a',
      'brown': '#92400e',
      'olive': '#365314',
      'natural': '#fef3c7',
      'charcoal': '#374151'
    };
    
    return colorMap[color.toLowerCase()] || '#6b7280';
  }
</script>